name: CI/CD (Swift + Homebrew)

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*.*.*'   # cut a release by tagging vX.Y.Z
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

env:
  SWIFT_VERSION: "6.0"

jobs:
  build_test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: swift-actions/setup-swift@v2.3.0
        with:
          swift-version: ${{ env.SWIFT_VERSION }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm
            ~/Library/Caches/org.swift.swiftpm
          key: ${{ runner.os }}-spmcache-${{ hashFiles('**/Package.resolved') }}
          restore-keys: ${{ runner.os }}-spmcache-
      - run: swift package resolve
      - run: swift build --configuration debug
      - run: swift test --parallel

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build_test]
    runs-on: macos-latest
    permissions:
      contents: write   # required to create release and upload assets
    steps:
      - uses: actions/checkout@v4

      - uses: swift-actions/setup-swift@v2.3.0
        with:
          swift-version: ${{ env.SWIFT_VERSION }}

      - name: Build release (universal if needed)
        run: |
          swift build --configuration release
          mkdir -p dist
          cp .build/release/isp-snitch dist/
          TAR="isp-snitch-${GITHUB_REF_NAME}-macos-universal.tar.gz"
          tar -czf "dist/$TAR" -C dist isp-snitch
          echo "TAR_NAME=$TAR" >> $GITHUB_ENV

      - name: Compute SHA256
        id: sha
        run: |
          SHASUM=$(shasum -a 256 "dist/${TAR_NAME}" | awk '{print $1}')
          echo "sha256=$SHASUM" >> $GITHUB_OUTPUT

      - name: Create GitHub Release + upload tarball
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          files: dist/${{ env.TAR_NAME }}

      - name: Bump Homebrew tap formula
        env:
          TAP_REPO: ${{ secrets.TAP_REPO }}        # e.g. your-org/homebrew-tap
          TAP_TOKEN: ${{ secrets.TAP_TOKEN }}
          VERSION: ${{ github.ref_name }}          # vX.Y.Z
          SHA256: ${{ steps.sha.outputs.sha256 }}
          ORG: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
        run: |
          # Derive URL to the asset in this release
          ASSET_URL="https://github.com/${ORG}/${REPO}/releases/download/${VERSION}/$TAR_NAME"

          # Clone tap repo
          git clone "https://${TAP_TOKEN}:x-oauth-basic@github.com/${TAP_REPO}.git" tap
          cd tap

          FORMULA_PATH="Formula/isp-snitch.rb"
          if [ ! -f "$FORMULA_PATH" ]; then
            echo "Formula file missing at $FORMULA_PATH"; exit 1
          fi

          # Update version, url, sha256 in-place
          # Strip 'v' from version for formula version field
          CLEAN_VER="${VERSION#v}"

          # Use Ruby-ish loose matching for replacements
          sed -i '' -E "s/^  version \".*\"/  version \"${CLEAN_VER}\"/" "$FORMULA_PATH"
          # url line: keep platform suffix in URL
          ESCAPED_URL=$(printf '%s\n' "$ASSET_URL" | sed -e 's/[\/&]/\\&/g')
          sed -i '' -E "s|^  url \".*\"|  url \"${ESCAPED_URL}\"|" "$FORMULA_PATH"
          sed -i '' -E "s/^  sha256 \".*\"/  sha256 \"${SHA256}\"/" "$FORMULA_PATH"

          # Commit and push
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$FORMULA_PATH"
          git commit -m "isp-snitch ${CLEAN_VER} (${VERSION})"
          git push origin HEAD

  lint:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: realm/SwiftLint@0.13.0
        with:
          strict: true